snippet wrapFunction "wrap function" b
export default function wrapDispatch(dispatch, reducerKey) {
  const wrappedDispatch = (action) => {
    let wrappedAction;
    if (typeof action === 'function') {
      wrappedAction = (_, getState) => action(wrappedDispatch, getState);
    } else if (typeof action === 'object') {
      wrappedAction = wrapAction(action, reducerKey);
    }
    return dispatch(wrappedAction);
  };

  return wrappedDispatch;
}
endsnippet

snippet wrapObject "wrap object" b
export default function wrapAction(action, reducerKey) {
  return {
    ...action,
    meta: {
      ...action.meta,
      [key]: reducerKey,
    }
  };
}
endsnippet

snippet timeout "setTimeout" b
setTimeout(()=> {
}, ${1:550})
endsnippet

snippet log "console.log()"
console.log("----> ${1:msg}", ${2:obj})
endsnippet

